{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/ApiServise/ApiServise.jsx","components/Loader/Loader.jsx","App.js","index.js"],"names":["Searchbar","state","query","onChangeQuery","e","value","target","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","this","type","autoComplete","autoFocus","placeholder","onChange","React","Component","ImageGalleryItem","images","openModal","map","id","webformatURL","largeImageURL","tags","onClick","src","alt","largeimageurl","ImageGallery","Button","Modal","handleKeyDowm","code","closeModal","handleClick","currentTarget","window","addEventListener","removeEventListener","ApiServiseFetch","page","BASE_URL","API_KEY","IMAGE_TYPE","PER_PAGE","axios","get","propTypes","options","PropTypes","shape","number","isRequired","string","Spinner","class","color","height","width","App","showModal","isLoading","API_OPTIONS","formSubmitHandler","searchQuery","fetchImages","setTimeout","then","response","prevState","data","hits","scrollToButton","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","getAttribute","prevProps","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0077b181.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends React.Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  onChangeQuery = e => {\r\n    const { value } = e.target;\r\n    this.setState({ query: value });\r\n  };\r\n\r\n  // Передає query в state App\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.query}\r\n            onChange={this.onChangeQuery}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ images, openModal }) => {\r\n  return (\r\n    <>\r\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <li className=\"ImageGalleryItem\" key={id} onClick={openModal}>\r\n          <img\r\n            src={webformatURL}\r\n            alt={tags}\r\n            largeimageurl={largeImageURL}\r\n            className=\"ImageGalleryItem-image\"\r\n          />\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, openModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\" >\r\n      <ImageGalleryItem images={images} openModal={openModal}/>\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Modal extends React.Component {\r\n  // Додає EventListener для відстеження натискання кнопок\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDowm);\r\n  }\r\n\r\n  // Прибирає EventListener для відстеження натискання кнопок\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDowm);\r\n  }\r\n\r\n  //Закриває модалку при натисканні кнопки Escape\r\n  handleKeyDowm = e => {\r\n    if (e.code === 'Escape') {\r\n    this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  //Закриває модалку при кліку в оверлей\r\n  handleClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n    this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeimageurl} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  closeModal: PropTypes.func.isRequired,\r\n  largeimageurl: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ApiServiseFetch = ({\r\n  query,\r\n  page,\r\n  BASE_URL,\r\n  API_KEY,\r\n  IMAGE_TYPE,\r\n  PER_PAGE,\r\n}) => {\r\n  return axios.get(\r\n    `${BASE_URL}?q=${query}&page=${page}&key=${API_KEY}&${IMAGE_TYPE}&per_page=${PER_PAGE}`,\r\n  );\r\n};\r\n\r\nApiServiseFetch.propTypes = {\r\n  options: PropTypes.shape({\r\n    query: PropTypes.number.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    BASE_URL: PropTypes.string.isRequired,\r\n    API_KEY: PropTypes.string.isRequired,\r\n    IMAGE_TYPE: PropTypes.string.isRequired,\r\n    PER_PAGE: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default ApiServiseFetch;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nexport default class Spinner extends React.Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        className={this.props.class}\r\n        type=\"Circles\"\r\n        color=\"#3f51b5\"\r\n        height={200}\r\n        width={200}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport ApiServiseFetch from './components/ApiServise/ApiServise';\nimport Loader from './components/Loader/Loader';\n\nclass App extends Component {\n  state = {\n    images: [],\n    query: '',\n    page: 1,\n    showModal: false,\n    largeimageurl: '',\n    isLoading: false,\n  };\n\n  API_OPTIONS = {\n    BASE_URL: 'https://pixabay.com/api/',\n    API_KEY: '21804857-e4d02e1e62ab2bb6123c0439f',\n    IMAGE_TYPE: 'image_type=photo&orientation=horizontal',\n    PER_PAGE: 12,\n  };\n\n  //fetch при оновленні query\n  componentDidUpdate(prevProps, prevState) {\n    const { query } = this.state;\n\n    if (prevState.query !== query) {\n      this.fetchImages();\n    }\n  }\n\n  // Приймає searchQuery з Searchbar і записує в query\n  formSubmitHandler = searchQuery => {\n    this.setState({ query: searchQuery, page: 1, images: [] });\n  };\n\n  //fetch\n  fetchImages = () => {\n    const { query, page } = this.state;\n    const { BASE_URL, API_KEY, IMAGE_TYPE, PER_PAGE } = this.API_OPTIONS;\n    const options = {\n      query,\n      page,\n      BASE_URL,\n      API_KEY,\n      IMAGE_TYPE,\n      PER_PAGE,\n    };\n\n    // setTimeout для того, щоб встиг показатися Loader\n    this.setState({ isLoading: true });\n    setTimeout(() => {\n      ApiServiseFetch(options)\n        .then(response =>\n          this.setState(prevState => ({\n            images: [...prevState.images, ...response.data.hits],\n            page: prevState.page + 1,\n          })),\n        )\n        .then(this.scrollToButton)\n        .finally(this.setState({ isLoading: false }));\n    }, 400);\n  };\n\n  // Автоскрол після fetch\n  scrollToButton = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  // Відкриття модалки\n  // setTimeout для того, щоб встиг показатися Loader\n  openModal = e => {\n    this.setState({ isLoading: true });\n\n    setTimeout(() => {\n      this.setState(({ showModal }) => ({\n        showModal: true,\n        largeimageurl: e.target.getAttribute('largeimageurl'),\n      }));\n      this.setState({ isLoading: false });\n    }, 300);\n  };\n\n  // Закриття модалки при кліку в оверлей, або при натисканні Escape\n  // closeModal = e => {\n  //   if (e.target === e.currentTarget || e.code === 'Escape') {\n  //     this.setState(({ showModal }) => ({\n  //       showModal: false,\n  //       largeimageurl: '',\n  //     }));\n  //   }\n  // };\n\n  // Закриття модалки\n  closeModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: false,\n      largeimageurl: '',\n    }));\n  };\n\n  render() {\n    const { images, showModal, largeimageurl, isLoading } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.formSubmitHandler} />\n        <ImageGallery openModal={this.openModal} images={images} />\n        {images.length > 0 && <Button onClick={this.fetchImages}></Button>}\n        {showModal && (\n          <Modal\n            closeModal={this.closeModal}\n            largeimageurl={largeimageurl}\n          ></Modal>\n        )}\n        {isLoading && <Loader class={'Loader'}></Loader>}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}